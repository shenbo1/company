using Company.DAL.Common;
using Company.Dto;
using Company.Dto.Model;
using Dapper;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Company.DAL.Data
{
    public class WorkListItemsDBOperate
    {
        const string TableName = "WorkListItems";

        #region 添加
        public static bool AddWorkListItems(WorkListItems model)
        {

            string sql = string.Format("insert into {0}([CompanyId],[CompanyName],[ProjectId],[WorkId],[Name],[Level],[Status],[UserId],[UserName],[StartDate],[EndDate],[Infos],[CreateDate],[CreateBy])  values(@CompanyId,@CompanyName,@ProjectId,@WorkId,@Name,@Level,@Status,@UserId,@UserName,@StartDate,@EndDate,@Infos,getdate(),@CreateBy)", TableName);
            return DBAccess.ExecuteSqlWithEntity(sql, model);
        }
        #endregion

        #region 修改
        public static bool ModifyWorkListItems(WorkListItems model)
        {
            string sql = string.Format(@"update {0} set [CompanyId]=@CompanyId,[CompanyName]=@CompanyName,[ProjectId]=@ProjectId,[WorkId]=@WorkId,[Name]=@Name,[Level]=@Level,[Status]=@Status,[UserId]=@UserId,[UserName]=@UserName,[StartDate]=@StartDate,[EndDate]=@EndDate,[Infos]=@Infos,[ModifyDate]=getdate(),[ModifyBy]=@ModifyBy
            where Id=@Id", TableName);
            return DBAccess.ExecuteSqlWithEntity(sql, model);
        }
        #endregion

        #region 获取单个对象
        public static WorkListItems GetModelById(int Id)
        {
            string sql = string.Format(@"select [Id],[CompanyId],[CompanyName],[ProjectId],[WorkId],[Name],[Level],[Status],[UserId],[UserName],[StartDate],[EndDate],[Infos],[CreateDate],[CreateBy],[ModifyBy] from {0} (nolock) where Id=@Id", TableName);
            return DBAccess.GetEntityById<WorkListItems>(sql, Id);
        }
        public static List<WorkListItems> GetModelByWorkId(int workId)
        {
            string sql = string.Format(@"select [Id],[CompanyId],[CompanyName],[ProjectId],[WorkId],[Name],[Level],[Status],[UserId],[UserName],[StartDate],[EndDate],[Infos],[CreateDate],[CreateBy],[ModifyBy] from {0} (nolock) where WorkId=@WorkId", TableName);
            return DBAccess.GetEntityList<WorkListItems>(sql, new {WorkId = workId });
        }
        #endregion
        #region 获取单个对象
        public static WorkListItems GetModelByName(string Name)
        {
            string sql = string.Format(@"select [Id],[CompanyId],[CompanyName],[ProjectId],[WorkId],[Name],[Level],[Status],[UserId],[UserName],[StartDate],[EndDate],[Infos],[CreateDate],[CreateBy],[ModifyBy],[Id],[CompanyId],[CompanyName],[ProjectId],[WorkId],[Name],[Level],[Status],[UserId],[UserName],[StartDate],[EndDate],[Infos],[CreateDate],[CreateBy],[ModifyBy] from {0} (nolock) where Name=@Name", TableName);
            return DBAccess.GetEntityByName<WorkListItems>(sql, Name);
        }
        #endregion


        #region 获取分页列表
        /// <summary>
        /// 获取分页列表
        /// </summary>
        /// <param name="pagesize">每页显示多少行</param>
        /// <param name="offset">跳过行数</param>
        /// <param name="key">关键词</param>
        /// <param name="totalcount">输出行数</param>
        /// <param name="GroupId">输出行数</param>
        /// <returns></returns>
        public static List<WorkListItems> GetPagerList(QueryBase query, out int totalcount)
        {
            var param = new DynamicParameters();
            totalcount = 0;
            Pager pager = new Pager() { TableName = TableName + " A", Offset = query.Offset, PageSize = query.Limit, ColName = "A.[ID]" };
            pager.Columns = @"A.[Id],A.[CompanyId],A.[CompanyName],A.[ProjectId],A.[WorkId],A.[Name],A.[Level],A.[Status],A.[UserId],A.[UserName],A.[StartDate],A.[EndDate],A.[Infos],A.[CreateDate],A.[CreateBy],A.[ModifyBy]";
            pager.WhereStr += " and A.[IsDeleted]=0 and a.CompanyId=@CompanyId";
            param.Add("CompanyId", query.CompanyId.ToString());
            if (!string.IsNullOrEmpty(query.KeyWord))
            {
                pager.WhereStr += " and A.[Name] like @Name";
                param.Add("Name", "%" + query.KeyWord + "%");
            }
            var list = PagerDBOperate<WorkListItems>.Init.GetList(pager, param, out totalcount);
            return list;
        }
        #endregion
    }
}