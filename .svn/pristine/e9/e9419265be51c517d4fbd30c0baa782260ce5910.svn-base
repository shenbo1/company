using Company.DAL.Common;
using Company.Dto;
using Company.Dto.Model;
using Dapper;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Company.DAL.Data
{
    public class ProjectManageDBOperate
    {
        const string TableName = "ProjectManage";

        #region 添加
        public static bool AddProjectManage(ProjectManage model)
        {

            string sql = string.Format("insert into {0}([Name],[FullName],[StartTime],[EndTime],[RelStartTime],[RelEndTime],[PayWay],[LastPayDate],[Money],[Status],[Infos],[CompanyId],[CreateDate],[CreateBy],[ModifyBy])  values(@Name,@FullName,@StartTime,@EndTime,@RelStartTime,@RelEndTime,@PayWay,@LastPayDate,@Money,@Status,@Infos,@CompanyId,getdate(),@CreateBy,@ModifyBy)", TableName);
            return DBAccess.ExecuteSqlWithEntity(sql, model);
        }
        #endregion

        #region 修改
        public static bool ModifyProjectManage(ProjectManage model)
        {
            string sql = string.Format(@"update {0} set [Name]=@Name,[FullName]=@FullName,[StartTime]=@StartTime,[EndTime]=@EndTime,[RelStartTime]=@RelStartTime,[RelEndTime]=@RelEndTime,[PayWay]=@PayWay,[LastPayDate]=@LastPayDate,[Money]=@Money,[Status]=@Status,[Infos]=@Infos,[CompanyId]=@CompanyId,[CreateBy]=@CreateBy,[ModifyDate]=getdate(),[ModifyBy]=@ModifyBy
            where Id=@Id", TableName);
            return DBAccess.ExecuteSqlWithEntity(sql, model);
        }
        #endregion
      
        #region 获取单个对象
        public static ProjectManage GetModelById(int Id)
        {
            string sql = string.Format(@"select [Id],[Name],[FullName],[StartTime],[EndTime],[RelStartTime],[RelEndTime],[PayWay],[LastPayDate],[Money],[Status],[Infos],[CompanyId],[CreateDate],[CreateBy],[ModifyBy] from {0} (nolock) where Id=@Id", TableName);
            return DBAccess.GetEntityById<ProjectManage>(sql, Id);
        }
        #endregion

        #region 获取分页列表
        /// <summary>
        /// 获取分页列表
        /// </summary>
        /// <param name="pagesize">每页显示多少行</param>
        /// <param name="offset">跳过行数</param>
        /// <param name="key">关键词</param>
        /// <param name="totalcount">输出行数</param>
        /// <param name="GroupId">输出行数</param>
        /// <returns></returns>
        public static List<ProjectManage> GetPagerList(int pagesize, int offset, string name, out int totalcount)
        {
            var param = new DynamicParameters();
            totalcount = 0;
            Pager pager = new Pager() { TableName = TableName + " A", Offset = offset, PageSize = pagesize, ColName = "A.[ID]" };
            pager.Columns = @"A.[Id],A.[Name],A.[FullName],A.[StartTime],A.[EndTime],A.[RelStartTime],A.[RelEndTime],A.[PayWay],A.[LastPayDate],A.[Money],A.[Status],A.[Infos],A.[CompanyId],A.[CreateDate],A.[CreateBy],A.[ModifyBy]";
            pager.WhereStr += " and A.[Deleted]=@Deleted";
            param.Add("Deleted", 0);
            if (!string.IsNullOrEmpty(name))
            {
                pager.WhereStr += " and A.[Name] like @Name";
                param.Add("Name", "%" + name + "%");
            }
            var list = PagerDBOperate<ProjectManage>.Init.GetList(pager, param, out totalcount);
            return list;
        }
        #endregion
    }
}